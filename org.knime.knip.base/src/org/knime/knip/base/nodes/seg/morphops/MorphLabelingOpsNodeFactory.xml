<!-- Copyright (c) 2010 IBM Corporation and others. All rights reserved. 
	This program and the accompanying materials are made available under the 
	terms of the Eclipse Public License v1.0 which accompanies this distribution, 
	and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: 
	IBM Corporation - initial API and implementation -->
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="morphops.png" type="Manipulator">
	<name>Morphological Labeling Operations</name>
	<shortDescription>
		Perform morphological operations on labelings.
	</shortDescription>

	<fullDescription>
		<intro>
			Perform morphological operations on labelings.
		</intro>
		<tab name="options">
			<option name="Connection Type">
				<ul>
					<li>Four-Connected</li>
					<li>Eight-Connected</li>
					<li>Structuring Element: Read the structuring element from the
						optional second in port.
					</li>
				</ul>
			</option>
			<option name="Structuring Element">
				Column of the structuring element.
			</option>
			<option name="Operation">
				<ul>
					<li>Erode: Erode labeled areas.</li>
					<li>Dilate: Dilate labeled areas.</li>
					<li>Open: Erode followed by Dilate. Erases tiny labeled spots.</li>
					<li>Close: Dilate followed by Erode. Erases small holes in labeled
						components.
					</li>
				</ul>
			</option>
			<option name="Strategy">
				<ul>
					<li>Individual Labeling: Erode/Dilate each label individually. This
						means, labels may also overlap.
					</li>
					<li>Binary: Erode/Dilate each pixel with none/any labeling in the
						neighborhood. In short: we don't distinguish between the
						individual labels and treat any labeled pixel as positive.
					</li>
				</ul>
			</option>
			<option name="Dimension Selection">Determines for which dimensions the morphological
				operations will be applied individually.
			</option>
			<option name="Out of Bounds Strategy">
				The 'OutOfBounds Strategy' is used when an algorithm needs access to
				pixels which lie outside of an image (for example convolutions). The
				strategy determines how an image is extended, for examples see
				<a href='http://fiji.sc/ImgLib2_Examples#Example_5_-_Out_of_bounds'>Fiji Wiki</a>
			</option>

		</tab>
	</fullDescription>

	<ports>
		<inPort index="0" name="Labelings">Labelings</inPort>
		<inPort index="1" name="Optional Structuring Elements">Optional Structuring Elements</inPort>
		<outPort index="0" name="Processed Labelings">Processed Labelings</outPort>
	</ports>
</knimeNode>